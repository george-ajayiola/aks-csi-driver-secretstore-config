# Key Vault creation
resource "azurerm_key_vault" "example" {
  name                        = "${var.key_vault}"
  location                    = azurerm_resource_group.this.location
  resource_group_name         = azurerm_resource_group.this.name
  tenant_id                   = data.azurerm_client_config.current.tenant_id
  sku_name                    = "standard"
}


# AKS cluster with System-Assigned Identity and Secrets Store CSI Driver enabled
resource "azurerm_kubernetes_cluster" "this" {
  name                      = "${var.env}-${var.aks_name}"
  location                  = azurerm_resource_group.this.location
  resource_group_name       = azurerm_resource_group.this.name
  dns_prefix                = "${var.env}-aks"
  kubernetes_version        = var.aks_version
  private_cluster_enabled   = false


  sku_tier = "Free"


  # Enable System-Assigned Managed Identity
  identity {
    type = "SystemAssigned"
  }

  # Enable the Secrets Store CSI Driver 
 key_vault_secrets_provider {
  secret_rotation_enabled = true
   
 }

  

  default_node_pool {
    name                 = "newpool"
    vm_size              = "Standard_D2_v2"
    vnet_subnet_id       = azurerm_subnet.subnet1.id
    node_count           = 2
  }

  tags = {
    env = var.env
  }
}

# Access policy for AKS System-Assigned Managed Identity to access Key Vault secrets
resource "azurerm_key_vault_access_policy" "aksvault" {
  key_vault_id = azurerm_key_vault.example.id
  tenant_id    = data.azurerm_client_config.current.tenant_id
  object_id    = azurerm_kubernetes_cluster.this.key_vault_secrets_provider[0].secret_identity[0].object_id

  secret_permissions = ["Get", "List"]
}

# Access policy for the new principal
# resource "azurerm_key_vault_access_policy" "new_principal_access" {
#   key_vault_id = azurerm_key_vault.example.id
#   tenant_id    = data.azurerm_client_config.current.tenant_id
#   object_id    = "07f77235-41ef-4e0e-ad8a-cfba931366c4"  

#   secret_permissions = ["Get", "List", "Set"] 
# }

resource "azurerm_container_registry" "acr" {
  name                     = "${var.acr_name}"
  location                 = azurerm_resource_group.this.location
  resource_group_name      = azurerm_resource_group.this.name
  sku                      = "Standard"  # Options: Basic, Standard, Premium
}

# Grant AKS System-Assigned Managed Identity permission to pull images from ACR
resource "azurerm_role_assignment" "acr_pull" {
  principal_id         = azurerm_kubernetes_cluster.this.identity[0].principal_id
  role_definition_name = "AcrPull"
  scope                = azurerm_container_registry.acr.id
}

